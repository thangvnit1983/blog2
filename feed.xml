<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Van Thang&#x27;s Blog</title>
    <link href="https://thangvnit1983.github.io/blog2/feed.xml" rel="self" />
    <link href="https://thangvnit1983.github.io/blog2" />
    <updated>2019-04-15T11:22:40+07:00</updated>
    <author>
        <name>Van Thang</name>
    </author>
    <id>https://thangvnit1983.github.io/blog2</id>

    <entry>
        <title>Openzfs tips</title>
        <author>
            <name>Van Thang</name>
        </author>
        <link href="https://thangvnit1983.github.io/blog2/openzfs-tips.html"/>
        <id>https://thangvnit1983.github.io/blog2/openzfs-tips.html</id>

        <updated>2019-04-15T11:22:36+07:00</updated>
            <summary>
                <![CDATA[
                    About SMR HDDAnother thing you might try is to leave the block size set at 1M but increase the zfs_vdev_aggregation_limit to 16M. This way as long as your doing 1M aligned IO you should never write partial blocks and leave holes. ZFS will aggregate these&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <div class="post__toc">
<h3>Table of Contents</h3>
<ul>
<li><a href="#mcetoc_1d8fjmtu10"></a></li>
<li><a href="#About-SMR-HDD">About SMR HDD</a></li>
<li><a href="#6x-Intel-P3520">[6x Intel P3520]</a></li>
</ul>
</div>
<h3 id="About-SMR-HDD"><a href="https://github.com/zfsonlinux/zfs/issues/4877" target="_blank" rel="external noopener noreferrer">About SMR HDD</a></h3>
<p>Another thing you might try is to leave the block size set at 1M but increase the zfs_vdev_aggregation_limit to 16M. This way as long as your doing 1M aligned IO you should never write partial blocks and leave holes. ZFS will aggregate these 1M blocks in to larger 16M IOs to the disk.</p>
<h3 id="6x-Intel-P3520">[6x Intel P3520]</h3>
<p>Before modify default parameter. there are only 1.xGB/s read or write. too slow…….</p>
<p><code></code></p>
<pre><span class="line">parted /dev/nvme0n1 p</span><br><span class="line">Model: Unknown (unknown)</span><br><span class="line">Disk /dev/nvme0n1: 2000GB</span><br><span class="line">Sector size (logical/physical): 512B/512B</span><br><span class="line">Partition Table: gpt</span><br><span class="line">Disk Flags:</span><br><br><span class="line">Number  Start   End     Size    File system  Name  Flags</span><br><span class="line"> 1      1049kB  1900GB  1900GB               disk1</span><br><br><span class="line">zpool destroy tank01</span><br><span class="line">zpool create tank01 -o ashift=13 -O recordsize=1M /dev/nvme{0..5}n1p1</span><br><span class="line"><span class="comment">###test mds</span></span><br><span class="line">zpool create <span class="_">-f</span> tank-mdt -O canmount=off -O xattr=sa -O acltype=posixacl -o ashift=12 -O recordsize=32k /dev/sd{b..d}</span><br><span class="line">zfs <span class="built_in">set</span> primarycache=metadata tank01</span><br><span class="line">zfs <span class="built_in">set</span> secondarycache=none tank01</span><br><span class="line">zfs <span class="built_in">set</span> logbias=throughput tank01</span><br><br><span class="line">...</span><br><span class="line">              capacity     operations     bandwidth</span><br><span class="line">pool        alloc   free   <span class="built_in">read</span>  write   <span class="built_in">read</span>  write</span><br><span class="line">----------  -----  -----  -----  -----  -----  -----</span><br><span class="line">tank01       132G  10.2T      0  16.7K      0  5.79G</span><br><span class="line">tank01       146G  10.2T      0  12.4K      0  7.22G</span><br><span class="line">tank01       161G  10.2T      0  10.9K      0  7.41G</span><br><span class="line">tank01       174G  10.1T      0  12.1K      0  7.18G</span><br><span class="line">...</span><br><span class="line">tank01       512G  9.81T  8.75K      0  8.75G      0</span><br><span class="line">tank01       512G  9.81T  8.78K     44  8.78G   864K</span><br><span class="line">tank01       512G  9.81T  8.85K      0  8.85G      0</span><br><span class="line">tank01       512G  9.81T  8.76K     53  8.76G   876K</span><br><span class="line">tank01       512G  9.81T  8.80K      0  8.80G      0</span><br><span class="line">tank01       512G  9.81T  8.78K     40  8.78G   876K</span><br><span class="line">...</span><br><span class="line">tank01       779G  9.55T  3.94K  4.37K  3.94G  3.99G</span><br><span class="line">tank01       787G  9.54T  3.99K  4.31K  3.99G  3.91G</span><br><span class="line">tank01       793G  9.54T  3.96K  4.32K  3.96G  3.99G</span><br><span class="line">tank01       801G  9.53T  3.94K  4.40K  3.94G  3.94G</span><br><span class="line">tank01       809G  9.52T  3.90K  4.32K  3.90G  3.92G</span><br><span class="line">tank01       818G  9.51T  3.96K  4.36K  3.96G  3.96G</span><br><span class="line">tank01       826G  9.51T  3.90K  4.41K  3.91G  4.02G</span><br><span class="line">tank01       834G  9.50T  3.94K  4.31K  3.94G  3.89G</span></pre>
<p><code></code></p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Test</title>
        <author>
            <name>Van Thang</name>
        </author>
        <link href="https://thangvnit1983.github.io/blog2/test.html"/>
        <id>https://thangvnit1983.github.io/blog2/test.html</id>

        <updated>2019-04-15T11:15:06+07:00</updated>
            <summary>
                <![CDATA[
                    <blockquote>xxx</blockquote>
<p><span style="text-decoration: line-through;"></span><span style="text-decoration: line-through;">xxxx</span></p>

                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <blockquote>xxx</blockquote>
<p><span style="text-decoration: line-through;"></span><span style="text-decoration: line-through;">xxxx</span></p>

<p><code>script scr=xxx</code></p>
            ]]>
        </content>
    </entry>
</feed>
